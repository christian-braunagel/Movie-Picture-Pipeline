name: Frontend Continuous Deployment

on:
  pull_request:
    branches:
      - main

  push:
    branches:
      - main

  workflow_dispatch:

jobs:
  linting:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Use Node.js latest
        uses: actions/setup-node@v3
        with:
          node-version: latest

      - name: Install dependencies
        run: |
          cd starter/frontend
          npm ci

      - name: run linter
        run: |
          cd starter/frontend
          npm run lint

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Use Node.js latest
        uses: actions/setup-node@v3
        with:
          node-version: latest

      - name: Install dependencies
        run: |
          cd starter/frontend
          npm ci

      - name: run test
        run: |
          cd starter/frontend
          npm run test

  build:
    needs: [linting, test]
    runs-on: ubuntu-latest
        
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Use Node.js latest
        uses: actions/setup-node@v3
        with:
          node-version: latest

      - name: Install dependencies
        run: |
          cd starter/frontend
          npm ci

      - name: run build
        env:
          REACT_APP_MOVIE_API_URL: test
        run: |
          cd starter/frontend
          npm run build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, Tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: my-ecr-repo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd starter/frontend
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Set up Kubeconfig
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::280529436201:role/udacity_eks
          role-session-name: GitHubActions
          role-duration-seconds: 1200
          mask-aws-account-id: false
          save-to-file: true

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Deploy to EKS
        run: |
          kubectl apply -f deployment.yaml